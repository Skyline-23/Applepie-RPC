name: üì¶ macOS Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: macos-15
    env:
      # Ïï± Ïä§ÌÇ¥(ÌÉÄÍ≤ü Ïù¥Î¶Ñ)
      APP_SCHEME: Applepie-RPC

    steps:
      - name: Switch to Xcode 16.3
        run: sudo xcode-select -s /Applications/Xcode_16.3.app/Contents/Developer

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Import signing certificate & provisioning profile
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.CERT_P12_BASE64 }}
          p12-password: ${{ secrets.CERT_PASSWORD }}
          create-keychain: true
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Find Developer ID Application identity
        run: |
          DEV_IDENTITY=$(
            security find-identity -v -p codesigning \
              | awk -F\" '/Developer ID Application:/ {print $2; exit}'
          )
          echo "Found Developer ID cert: $DEV_IDENTITY"
          echo "CODE_SIGN_IDENTITY=$DEV_IDENTITY" >> $GITHUB_ENV

      - name: Create App Store Connect API Key file
        run: |
          echo "${{ secrets.APPSTORE_PRIVATE_KEY_P8 }}" | base64 --decode \
            > "${GITHUB_WORKSPACE}/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8"
          chmod 600 "${GITHUB_WORKSPACE}/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8"

      - name: Install create-dmg CLI
        run: npm install --global create-dmg

      - name: Build & Archive .app
        run: |
          xcodebuild archive \
            -skipPackagePluginValidation \
            -scheme "${{ env.APP_SCHEME }}" \
            -archivePath "${{ github.workspace }}/build/${{ env.APP_SCHEME }}.xcarchive" \
            SKIP_INSTALL=NO \
            -configuration Release \
            -allowProvisioningUpdates \
            -allowProvisioningDeviceRegistration \
            CODE_SIGN_STYLE="Manual" \
            CODE_SIGN_IDENTITY="${{ env.CODE_SIGN_IDENTITY }}" \
            OTHER_SWIFT_FLAGS="-no-verify-emitted-module-interface"

      - name: Extract .app from archive
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dist"
          cp -R "$GITHUB_WORKSPACE/build/$APP_SCHEME.xcarchive/Products/Applications/$APP_SCHEME.app" \
                "$GITHUB_WORKSPACE/dist/"

      - name: Deep code sign .app
        run: |
          APP="${{ github.workspace }}/dist/${{ env.APP_SCHEME }}.app"
          codesign --force --deep --options runtime --timestamp \
                   --sign "${CODE_SIGN_IDENTITY}" \
                   "$APP"

      - name: Create DMG
        run: |
          create-dmg "${{ github.workspace }}/dist/${{ env.APP_SCHEME }}.app" \
                     "${{ github.workspace }}/dist" --overwrite --dmg-title="${{ github.workspace }}/dist/${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"

      - name: Notarize & Staple DMG
        uses: GuillaumeFalourd/notary-tools@v1
        with:
          # ÎßåÎì§Ïñ¥ÏßÑ DMG Í≤ΩÎ°ú
          product_path: "${{ github.workspace }}/${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"
          # Repository secretsÏóê Îì±Î°ùÌïú Í∞í
          apple_id: ${{ secrets.APPLE_ID }}
          password: ${{ secrets.APPLE_PASSWORD }}
          team_id: ${{ secrets.TEAM_ID }}
          staple: true
          xcode_path: '/Applications/Xcode_16.3.app'

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload DMG to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url:    ${{ steps.create_release.outputs.upload_url }}
          asset_path:    "${{ github.workspace }}/dist/${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"
          asset_name:    "${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"
          asset_content_type: application/octet-stream
