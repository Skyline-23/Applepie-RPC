name: üì¶ macOS Release

on:
  push:
    tags:
      - 'v*.*.*'
permissions:
  contents: write
  
jobs:
  build-and-release:
    runs-on: macos-15
    env:
      # Ïï± Ïä§ÌÇ¥(ÌÉÄÍ≤ü Ïù¥Î¶Ñ)
      APP_SCHEME: Applepie-RPC

    steps:
      - name: Switch to Xcode 16.3
        run: sudo xcode-select -s /Applications/Xcode_16.3.app/Contents/Developer

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          persist-credentials: true

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Import signing certificate & provisioning profile
        id: import-certs
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.CERT_P12_BASE64 }}
          p12-password: ${{ secrets.CERT_PASSWORD }}
          create-keychain: true
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          keychain: signing_temp

      - name: Find Developer ID Application identity
        run: |
          KEYCHAIN_PATH="$HOME/Library/Keychains/signing_temp.keychain-db"
          echo "üîë Using keychain: $KEYCHAIN_PATH"
          
          security list-keychains -d user -s "$KEYCHAIN_PATH" \
            $(security list-keychains -d user | sed -e 's/"//g')

          echo "----- ALL IDENTITIES IN KEYCHAIN -----"
          security find-identity -v -p codesigning "$KEYCHAIN_PATH"
          echo "--------------------------------------"
    
          DEV_IDENTITY=$(
            security find-identity -v -p codesigning "$KEYCHAIN_PATH" \
              | awk -F\" '/Developer ID Application:/ {print $2; exit}'
          )
          echo "Found Developer ID cert: $DEV_IDENTITY"
          echo "CODE_SIGN_IDENTITY=$DEV_IDENTITY" >> $GITHUB_ENV

      - name: Fail if no code signing identity
        run: |
          if [ -z "${CODE_SIGN_IDENTITY}" ]; then
            echo "‚ùå CODE_SIGN_IDENTITY is not set. Aborting."
            exit 1
          fi

      - name: Create App Store Connect API Key file
        run: |
          echo "${{ secrets.APPSTORE_PRIVATE_KEY_P8 }}" | base64 --decode \
            > "${GITHUB_WORKSPACE}/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8"
          chmod 600 "${GITHUB_WORKSPACE}/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8"

      - name: Install create-dmg CLI
        run: npm install --global create-dmg

      - name: Build & Archive .app
        run: |
          echo "üîç CODE_SIGN_IDENTITY is: [$CODE_SIGN_IDENTITY]"
          xcodebuild archive \
            -scheme "${{ env.APP_SCHEME }}" \
            -skipPackagePluginValidation \
            -configuration Release \
            -archivePath "${{ github.workspace }}/build/${{ env.APP_SCHEME }}.xcarchive" \
            -derivedDataPath "${{ github.workspace }}/build" \
            CODE_SIGN_STYLE="Manual" \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            PROVISIONING_PROFILE_SPECIFIER="" \
            DEVELOPMENT_TEAM="Q23JLSJCCV"
            OTHER_SWIFT_FLAGS="-no-verify-emitted-module-interface"

      - name: Extract .app from archive
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dist"
          cp -R "$GITHUB_WORKSPACE/build/$APP_SCHEME.xcarchive/Products/Applications/$APP_SCHEME.app" \
                "$GITHUB_WORKSPACE/dist/"

      - name: Verify Python scripts are bundled
        run: |
          APP="dist/${{ env.APP_SCHEME }}.app"
          echo "üîç Checking Python scripts in $APP/Contents/Resources/python/"
          MISSING=0
          for SCRIPT in discord_service.py pyatv_service.py applepie-rpc.py; do
            if [ ! -f "$APP/Contents/Resources/python/$SCRIPT" ]; then
              echo "::error:: Missing script: $SCRIPT"
              MISSING=1
            fi
          done
          ls -R "$APP/Contents/Resources/python" || true
          if [ $MISSING -ne 0 ]; then
            echo "::error:: One or more Python scripts are not bundled in the .app"
            exit 1
          fi

      - name: Deep code sign .app
        run: |
          APP="${{ github.workspace }}/dist/${{ env.APP_SCHEME }}.app"
          ENTITLEMENTS="${{ github.workspace }}/Applepie-RPC/Resources/Applepie_RPC.entitlements"
          codesign --force --deep --options runtime --timestamp \
                   --entitlements "$ENTITLEMENTS" \
                   --sign "${CODE_SIGN_IDENTITY}" \
                   "$APP"

      - name: Verify Python scripts are bundled
        run: |
          APP="dist/${{ env.APP_SCHEME }}.app"
          echo "üîç Checking Python scripts in $APP/Contents/Resources/python/"
          MISSING=0
          for SCRIPT in discord_service.py pyatv_service.py applepie-rpc.py; do
            if [ ! -f "$APP/Contents/Resources/python/$SCRIPT" ]; then
              echo "::error:: Missing script: $SCRIPT"
              MISSING=1
            fi
          done
          ls -R "$APP/Contents/Resources/python" || true
          if [ $MISSING -ne 0 ]; then
            echo "::error:: One or more Python scripts are not bundled in the .app"
            exit 1
          fi

      - name: Create DMG
        run: |
          APP_PATH="${{ github.workspace }}/dist/${{ env.APP_SCHEME }}.app"
          DIST_DIR="${{ github.workspace }}/dist"
          VERSION=$(/usr/libexec/PlistBuddy \
            -c "Print :CFBundleShortVersionString" \
            "$APP_PATH/Contents/Info.plist")
          echo "üîñ App version: $VERSION"

          create-dmg \
            "$APP_PATH" \
            "$DIST_DIR" \
            --overwrite \
            --dmg-title="${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"

          GENERATED=$(ls "$DIST_DIR" | grep "${{ env.APP_SCHEME }} ${VERSION}.dmg" || true)
          if [ -z "$GENERATED" ]; then
            exit 1
          fi
          TARGET_NAME="${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"
          mv "$DIST_DIR/$GENERATED" "$DIST_DIR/$TARGET_NAME"
          echo "‚úÖ Renamed $GENERATED ‚Üí $TARGET_NAME"

      - name: Notarize & Staple DMG
        uses: GuillaumeFalourd/notary-tools@v1
        with:
          # ÎßåÎì§Ïñ¥ÏßÑ DMG Í≤ΩÎ°ú
          product_path: "${{ github.workspace }}/dist/${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg"
          # Repository secretsÏóê Îì±Î°ùÌïú Í∞í
          apple_id: ${{ secrets.APPLE_ID }}
          password: ${{ secrets.APPLE_PASSWORD }}
          team_id: ${{ secrets.TEAM_ID }}
          staple: true
          xcode_path: '/Applications/Xcode_16.3.app'

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ github.workspace }}/dist/${{ env.APP_SCHEME }}-${{ github.ref_name }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
